defaultTasks 'clean', 'javadoc', 'test', 'check', 'checkstyleMain', 'checkstyleTest', 'assemble', 'shadowJar'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'net.researchgate:gradle-release:2.4.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'
    apply plugin: 'findbugs'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'net.researchgate.release'
    apply plugin: 'com.github.johnrengelman.shadow'

    version = "1.4"

    check.dependsOn jacocoTestReport

    bintrayUpload.dependsOn 'jar', 'sourceJar', 'javadocJar'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        sourceCompatibility = '1.7'
        targetCompatibility = '1.7'
    }

    javadoc {
        options.encoding = 'UTF-8'
    }

    repositories {
        jcenter()
    }

    dependencies {
        compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
        compile group: 'commons-io', name: 'commons-io', version: '2.5'
        compile group: 'mil.nga', name: 'tiff', version: '2.0'
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'commons-io', name: 'commons-io', version: '2.5'
    }

    configurations {
        checkstyleConfig
    }

    dependencies {
        checkstyleConfig ("com.puppycrawl.tools:checkstyle:7.1") {
            transitive = false
        }
    }    

    checkstyle {
        toolVersion = '7.1'
        configFile = new File(rootDir, "config/checkstyle.xml")
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    release {
        failOnUnversionedFiles = false
    }

    jar {
        manifest {
            attributes("Implementation-Title": "tiffdumper",
                       "Implementation-Version": version,
                       "Implementation-Vendor": "https://github.com/michaelknigge/tiffdumper",
                       "Specification-Title": "Java command line tool for dumping TIFF images",
                       "Main-Class": "de.textmode.tiffdumper.Main",
                       "Created-By": System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')',
                       "Class-Path": configurations.compile.collect { it.getName() }.join(' '))
        }
    }

    bintray {
        user = project.hasProperty('bintray.user') ? project.property('bintray.user') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintray.key') ? project.property('bintray.key') : System.getenv('BINTRAY_KEY')

        publications = ['maven']
        publish = true
        pkg {
            repo = 'maven'
            name = 'tiffdumper'
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/michaelknigge/tiffdumper.git'
            websiteUrl = 'https://github.com/michaelknigge/tiffdumper'
            issueTrackerUrl = 'https://github.com/michaelknigge/tiffdumper/issues'
            labels = ['tif', 'tiff', 'dump', 'analysis', 'analyzer']
            publicDownloadNumbers = true

            githubRepo = 'michaelknigge/tiffdumper'

            version {
                name = project.version
                desc = "tiffdumper version ${project.version}"
                released = new Date()
                vcsTag = "${project.version}"

                gpg {
                    sign = true
                }
            }
        }
    }

    task sourceJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allJava
    }

    task javadocJar (type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java

                artifact sourceJar {
                    classifier 'sources'
                }

                artifact (javadocJar) {
                    classifier = 'javadoc'
                }

                groupId 'de.textmode.tiffdumper'
                artifactId 'tiffdumper'
                version "${project.version}"
            }
        }
    }
}
